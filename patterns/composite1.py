#–ú–µ–Ω—é —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–ì–æ—Ä—è—á–∏–µ –±–ª—é–¥–∞", "–ù–∞–ø–∏—Ç–∫–∏").
#
#–ö–∞–∂–¥–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ª–∏–±–æ –±–ª—é–¥–∞, –ª–∏–±–æ –¥—Ä—É–≥–∏–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏.
#
#–ë–ª—é–¥–æ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ —Ü–µ–Ω—É.
#
#–ú–µ—Ç–æ–¥ show() –¥–æ–ª–∂–µ–Ω –≤—ã–≤–æ–¥–∏—Ç—å –º–µ–Ω—é –≤ –∏–µ—Ä–∞—Ä—Ö–∏—á–µ—Å–∫–æ–º –≤–∏–¥–µ.

from abc import ABC, abstractmethod

class MenuItem(ABC):
    @abstractmethod
    def show(indent=0):
        pass

class Category(MenuItem):
    def __init__(self, name):
        self.name = name
        self.children = []

    def add(self, item: MenuItem):
        self.children.append(item)

    def show(self, indent=0):
        vidget = 'üìã' if indent == 0 else 'üìÇ'
        print(f"{indent*' '}{vidget} {self.name}")
        for child in self.children:
            child.show(indent+4)

class Dish(MenuItem):
    def __init__(self, name, price):
        self.name = name
        self.price = price

    def show(self, indent=0):
        print(f" {indent*' '}üçΩ {self.name} - {self.price}")





menu = Category("–ú–µ–Ω—é")
hot_food = Category("–ì–æ—Ä—è—á–∏–µ –±–ª—é–¥–∞")
drinks = Category("–ù–∞–ø–∏—Ç–∫–∏")

hot_food.add(Dish("–ü–∏—Ü—Ü–∞", 500))
hot_food.add(Dish("–ë–æ—Ä—â", 300))

drinks.add(Dish("–ß–∞–π", 100))
drinks.add(Dish("–ö–æ—Ñ–µ", 150))

menu.add(hot_food)
menu.add(drinks)

menu.show()
#–û–∂–∏–¥–∞–µ–º—ã–π –≤—ã–≤–æ–¥:
#
#markdown
#Copy code
#üìã –ú–µ–Ω—é
#    üìÇ –ì–æ—Ä—è—á–∏–µ –±–ª—é–¥–∞
#        üçΩ –ü–∏—Ü—Ü–∞ - 500 —Ä—É–±.
#        üçΩ –ë–æ—Ä—â - 300 —Ä—É–±.
#    üìÇ –ù–∞–ø–∏—Ç–∫–∏
#        üçΩ –ß–∞–π - 100 —Ä—É–±.
#        üçΩ –ö–æ—Ñ–µ - 150 —Ä—É–±.
#–ü–æ–ø—Ä–æ–±—É–π —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å!
#







